// SIMPLE TEST - Just verify if the transaction data works
const ethers = require('ethers');

async function testTransaction() {
  const RPC = 'https://base-mainnet.g.alchemy.com/v2/5rh4q5yTcTQgN3oHoRKRq';
  const provider = new ethers.providers.JsonRpcProvider(RPC);

  const transactionData = {
    to: "0x0000000000001fF3684f28c67538d4D072C22734",
    data: "0x2213bc0b00000000000000000000000047146d81b68b737316d0636d5135849d364bb0c800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011c37937e0800000000000000000000000000047146d81b68b737316d0636d5135849d364bb0c800000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000007041fff991f000000000000000000000000e24366fc2f73287bd94434e30c54fc228fd731c9000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda0291300000000000000000000000000000000000000000000000000000000014fbc3e00000000000000000000000000000000000000000000000000000000000000a0bcf88ae7a7221b5385c5bce60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000004e0000000000000000000000000000000000000000000000000000000000000010438c9c147000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000000000000027100000000000000000000000004200000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000024d0e30db00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c467848fe700000000000000000000000047146d81b68b737316d0636d5135849d364bb0c800000000000000000000000042000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000002710000000000000000000000000df033790907c60c9b81ae355f76f74f52f92114a00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064c876d21d000000000000000000000000f5c4f3dc02c3fb9279495a8fef7b0741da956157000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000000000000000000000000000000000000157607e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012438c9c147000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda029130000000000000000000000000000000000000000000000000000000000000008000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000044a9059cbb0000000000000000000000004a30a2b1272b28b395197181b05c90e8b06b4a4100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012438c9c147000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000000000000000000000000000000000000000000f000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000ad01c20d5886137e056775af56915de824c8fce50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    value: ethers.utils.parseEther("0.005").toString(),
    from: "0xe24366fc2F73287bd94434E30C54fC228FD731c9"
  };

  console.log('Testing transaction with value:', transactionData.value);

  try {
    const gasEstimate = await provider.estimateGas(transactionData);
    console.log('‚úÖ Gas estimation SUCCESS:', gasEstimate.toString());
    console.log('üéâ Transaction data is valid!');
  } catch (error) {
    console.log('‚ùå Gas estimation failed:', error.message);
    if (error.data) {
      console.log('Error data:', error.data);
    }
  }
}

testTransaction().catch(console.error);